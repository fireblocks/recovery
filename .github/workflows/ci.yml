name: CI

on:
  pull_request:
    types: [closed]

jobs:
  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 2

  #     - name: Setup Node.js environment
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: lts/gallium
  #         cache: yarn

  #     - name: Install Node.js dependencies
  #       run: yarn install --frozen-lockfile

  #     - name: Lint
  #       if: false # TODO: Fix PyLint errors
  #       run: yarn lint

  #     - name: Run tests
  #       run: yarn test

  pr:
    name: Version packages
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'new-version')
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn

      - name: Create release pull request
        id: changesets
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}

  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.runs-on }}
    if: contains(github.event.pull_request.labels.*.name, 'new-version')
    needs: [pr]
    timeout-minutes: 35

    strategy:
      matrix:
        include:
          - os: Ubuntu (x86-64)
            runs-on: ubuntu-latest
          # - os: macOS 13 (x86-64)
          #   runs-on: macos-13
          # # GitHub currently only supports self-hosted runners for Apple Silicon Macs
          # - os: macOS 13 (ARM64)
          #   runs-on: [self-hosted, macos-13, ARM64]
          # - os: Windows (x86-64)
          #   runs-on: windows-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        # setup-node stalls on self-hosted runner
        if: ${{ !contains(matrix.runs-on, 'ARM64') }}
        uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: yarn

      - name: Install Node.js dependencies
        run: yarn install --frozen-lockfile --network-timeout 100000

      - name: Build packages
        run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          yarn forcebuild

      - name: Upload Recovery Utility ${{ matrix.os }} artifact
        uses: actions/upload-artifact@v4
        with:
          name: Recovery Utility ${{ matrix.os }}
          path: |
            apps/recovery-utility/dist/*.AppImage
            apps/recovery-utility/dist/*.exe
            apps/recovery-utility/dist/*.zip

      - name: Upload Recovery Relay artifact
        uses: actions/upload-artifact@v4
        with:
          name: Recovery Relay - ${{ matrix.os }}
          path: apps/recovery-relay/out/

      # - name: Clean up Apple Developer secrets
      #   if: ${{ startsWith(matrix.os, 'macos') && always() }}
      #   env:
      #     KEYCHAIN_PATH: ${{ env.KEYCHAIN_PATH }}
      #     APPLE_KEY_DIR_PATH: ${{ env.APPLE_KEY_DIR_PATH }}
      #   run: |
      #     security delete-keychain "$KEYCHAIN_PATH"
      #     rm -rf "$APPLE_KEY_DIR_PATH"
